
* CSS preprocessors:
- They compile down into CSS. 
- They make managing CSS easier, with things like variables and mixins.

* overflow: hidden

* Responsive image:
{width: 100%;
height: auto;}

___________________________________________________________________________________________________________________________________________

** CSS Selectors **

* Difference  between "div p" selector and "div > p" selector.
- "div p" selector: affects all p elements.
- "div > p" selector: affects only direct children.
- div + p: adjacent siblings.
- div ~ p: all siblings.

___________________________________________________________________________________________________________________________________________

** position **

- By default, it's position: static.
- For position: static, few properties have no effect.


* Difference between position: absolute and position: relative.
- position: relative places an element relative to its current position.
- position: absolute places an element relative to its nearest ancestor position (with some position).

- position: absolute will position that element to it's nearest parent with a position.

- position: relative is a little weird because it really affects that element's children, not it's own position. It's just saying to it's child elements, "position yourself relative to me if you have position: absolute.

___________________________________________________________________________________________________________________________________________

** display **

- no paddin-top paddin-bottom margin-top margin-bottom on inline elements.

* Difference  between display: block and display: inline-block.
- With display: block an element takes the whole width.


* Difference  between display: inline and display: inline-block.
- With display: inline, a few properties have no effect.
- With display: inline-block, paddin-top paddin-bottom margin-top margin-bottom will have effect.
- With display: inline-block, navigation links in the menu can be designed horizontally.


* Difference  between display: none and visibility: hidden.
- With display: none, an element isn't allocated any space.
- With visibility: hidden, an element is allocated space.

___________________________________________________________________________________________________________________________________________

** Box Model **

* Box Model: 
- It is a box that wraps around every HTML element.
- It consists of: content, padding, border, margin

- When you set the width and height properties of an element, you just set the width and height of the content area.

* Actual width of an element = width + left padding + right padding + left border + right border + left margin + right margin.

- box-sizing property defines how the width and height of an element are calculated (should they include padding and borders, or not).

- "box-sizing: border-box" includes padding and border in the width and height of an element.

___________________________________________________________________________________________________________________________________________

** The clearfix Hack **


* "clear: right" - no floating elements allowed on the right side.

- If an element is taller than the element containing it, and it is floated, it will overflow outside of its container.

.clearfix {
    overflow: auto;
}

.clearfix::after {
    content: "";
    clear: both;
    display: table;
}
___________________________________________________________________________________________________________________________________________

** max-width:
- The problem with "width" occurs when the browser window is smaller than the width of the element (500px). The browser then adds a horizontal scrollbar to the page.

- Using max-width instead, in this situation, will improve the browser's handling of small windows.

___________________________________________________________________________________________________________________________________________

* word-wrap
* word-break

___________________________________________________________________________________________________________________________________________

** CSS Units **

___________________________________________________________________________________________________________________________________________

*** Bootstrap ***

* container - fixed width.
* container-fluid - full width.

* Grid System:
- 768px
- 992px
- 1200px

- xs
- sm
- md
- lg
___________________________________________________________________________________________________________________________________________

** Center a website:

.content {
    max-width: 500px;
    margin: auto;
}

___________________________________________________________________________________________________________________________________________


What is the left and margin-left

___________________________________________________________________________________________________________________________________________
